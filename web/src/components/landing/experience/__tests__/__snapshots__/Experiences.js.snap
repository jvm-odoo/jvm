// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with data 1`] = `
<MockedProvider
  addTypename={false}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": undefined,
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "experiences",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "image",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "place",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "dateFrom",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "dateTo",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "role",
                            },
                            "selectionSet": undefined,
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 123,
              "start": 0,
            },
          },
        },
        "result": Object {
          "data": Object {
            "experiences": Array [
              Object {
                "dateFrom": "web",
                "dateTo": "to",
                "id": 1,
                "image": "prout",
                "place": "github",
                "role": "tester",
              },
              Object {
                "dateFrom": "web2",
                "dateTo": "to2",
                "id": 2,
                "image": "prout2",
                "place": "github2",
                "role": "tester2",
              },
            ],
          },
        },
      },
    ]
  }
>
  <ApolloProvider
    client={
      ApolloClient {
        "cache": InMemoryCache {
          "addTypename": false,
          "cacheKeyRoot": KeyTrie {
            "weak": WeakMap {},
            "weakness": true,
          },
          "config": Object {
            "addTypename": false,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {
              "ROOT_QUERY": Object {
                "experiences": Array [
                  Object {
                    "generated": true,
                    "id": "ROOT_QUERY.experiences.0",
                    "type": "id",
                    "typename": undefined,
                  },
                  Object {
                    "generated": true,
                    "id": "ROOT_QUERY.experiences.1",
                    "type": "id",
                    "typename": undefined,
                  },
                ],
              },
              "ROOT_QUERY.experiences.0": Object {
                "dateFrom": "web",
                "dateTo": "to",
                "id": 1,
                "image": "prout",
                "place": "github",
                "role": "tester",
              },
              "ROOT_QUERY.experiences.1": Object {
                "dateFrom": "web2",
                "dateTo": "to2",
                "id": 2,
                "image": "prout2",
                "place": "github2",
                "role": "tester2",
              },
            },
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {
              "ROOT_QUERY": Object {
                "experiences": Array [
                  Object {
                    "generated": true,
                    "id": "ROOT_QUERY.experiences.0",
                    "type": "id",
                    "typename": undefined,
                  },
                  Object {
                    "generated": true,
                    "id": "ROOT_QUERY.experiences.1",
                    "type": "id",
                    "typename": undefined,
                  },
                ],
              },
              "ROOT_QUERY.experiences.0": Object {
                "dateFrom": "web",
                "dateTo": "to",
                "id": 1,
                "image": "prout",
                "place": "github",
                "role": "tester",
              },
              "ROOT_QUERY.experiences.1": Object {
                "dateFrom": "web2",
                "dateTo": "to2",
                "id": 2,
                "image": "prout2",
                "place": "github2",
                "role": "tester2",
              },
            },
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {
            Object {
              "callback": [Function],
              "optimistic": true,
              "previousResult": [Function],
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "experiences",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "image",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "place",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "dateFrom",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "dateTo",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "role",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 123,
                  "start": 0,
                },
              },
              "variables": Object {},
            },
          },
        },
        "clearStoreCallbacks": Array [],
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": MockLink {
          "addTypename": false,
          "mockedResponsesByKey": Object {
            "{\\"query\\":\\"{\\\\n  experiences {\\\\n    id\\\\n    image\\\\n    place\\\\n    dateFrom\\\\n    dateTo\\\\n    role\\\\n  }\\\\n}\\\\n\\"}": Array [],
          },
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": false,
            "cacheKeyRoot": KeyTrie {
              "weak": WeakMap {},
              "weakness": true,
            },
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "experiences": Array [
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.0",
                      "type": "id",
                      "typename": undefined,
                    },
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.1",
                      "type": "id",
                      "typename": undefined,
                    },
                  ],
                },
                "ROOT_QUERY.experiences.0": Object {
                  "dateFrom": "web",
                  "dateTo": "to",
                  "id": 1,
                  "image": "prout",
                  "place": "github",
                  "role": "tester",
                },
                "ROOT_QUERY.experiences.1": Object {
                  "dateFrom": "web2",
                  "dateTo": "to2",
                  "id": 2,
                  "image": "prout2",
                  "place": "github2",
                  "role": "tester2",
                },
              },
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "experiences": Array [
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.0",
                      "type": "id",
                      "typename": undefined,
                    },
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.1",
                      "type": "id",
                      "typename": undefined,
                    },
                  ],
                },
                "ROOT_QUERY.experiences.0": Object {
                  "dateFrom": "web",
                  "dateTo": "to",
                  "id": 1,
                  "image": "prout",
                  "place": "github",
                  "role": "tester",
                },
                "ROOT_QUERY.experiences.1": Object {
                  "dateFrom": "web2",
                  "dateTo": "to2",
                  "id": 2,
                  "image": "prout2",
                  "place": "github2",
                  "role": "tester2",
                },
              },
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "experiences",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "image",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "place",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "dateFrom",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "dateTo",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "role",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 123,
                    "start": 0,
                  },
                },
                "variables": Object {},
              },
            },
          },
          "client": [Circular],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "queryManager": QueryManager {
          "assumeImmutableResults": false,
          "clientAwareness": Object {
            "name": undefined,
            "version": undefined,
          },
          "dataStore": DataStore {
            "cache": InMemoryCache {
              "addTypename": false,
              "cacheKeyRoot": KeyTrie {
                "weak": WeakMap {},
                "weakness": true,
              },
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "freezeResults": false,
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {
                  "ROOT_QUERY": Object {
                    "experiences": Array [
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.0",
                        "type": "id",
                        "typename": undefined,
                      },
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.1",
                        "type": "id",
                        "typename": undefined,
                      },
                    ],
                  },
                  "ROOT_QUERY.experiences.0": Object {
                    "dateFrom": "web",
                    "dateTo": "to",
                    "id": 1,
                    "image": "prout",
                    "place": "github",
                    "role": "tester",
                  },
                  "ROOT_QUERY.experiences.1": Object {
                    "dateFrom": "web2",
                    "dateTo": "to2",
                    "id": 2,
                    "image": "prout2",
                    "place": "github2",
                    "role": "tester2",
                  },
                },
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {
                  "ROOT_QUERY": Object {
                    "experiences": Array [
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.0",
                        "type": "id",
                        "typename": undefined,
                      },
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.1",
                        "type": "id",
                        "typename": undefined,
                      },
                    ],
                  },
                  "ROOT_QUERY.experiences.0": Object {
                    "dateFrom": "web",
                    "dateTo": "to",
                    "id": 1,
                    "image": "prout",
                    "place": "github",
                    "role": "tester",
                  },
                  "ROOT_QUERY.experiences.1": Object {
                    "dateFrom": "web2",
                    "dateTo": "to2",
                    "id": 2,
                    "image": "prout2",
                    "place": "github2",
                    "role": "tester2",
                  },
                },
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
                "executeSubSelectedArray": [Function],
                "freezeResults": false,
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "experiences",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "image",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "place",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "dateFrom",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "dateTo",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "role",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 123,
                      "start": 0,
                    },
                  },
                  "variables": Object {},
                },
              },
            },
          },
          "fetchQueryRejectFns": Map {},
          "idCounter": 3,
          "inFlightLinkObservables": Map {},
          "link": MockLink {
            "addTypename": false,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"{\\\\n  experiences {\\\\n    id\\\\n    image\\\\n    place\\\\n    dateFrom\\\\n    dateTo\\\\n    role\\\\n  }\\\\n}\\\\n\\"}": Array [],
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "cacheKeyRoot": KeyTrie {
                "weak": WeakMap {},
                "weakness": true,
              },
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "freezeResults": false,
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {
                  "ROOT_QUERY": Object {
                    "experiences": Array [
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.0",
                        "type": "id",
                        "typename": undefined,
                      },
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.1",
                        "type": "id",
                        "typename": undefined,
                      },
                    ],
                  },
                  "ROOT_QUERY.experiences.0": Object {
                    "dateFrom": "web",
                    "dateTo": "to",
                    "id": 1,
                    "image": "prout",
                    "place": "github",
                    "role": "tester",
                  },
                  "ROOT_QUERY.experiences.1": Object {
                    "dateFrom": "web2",
                    "dateTo": "to2",
                    "id": 2,
                    "image": "prout2",
                    "place": "github2",
                    "role": "tester2",
                  },
                },
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {
                  "ROOT_QUERY": Object {
                    "experiences": Array [
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.0",
                        "type": "id",
                        "typename": undefined,
                      },
                      Object {
                        "generated": true,
                        "id": "ROOT_QUERY.experiences.1",
                        "type": "id",
                        "typename": undefined,
                      },
                    ],
                  },
                  "ROOT_QUERY.experiences.0": Object {
                    "dateFrom": "web",
                    "dateTo": "to",
                    "id": 1,
                    "image": "prout",
                    "place": "github",
                    "role": "tester",
                  },
                  "ROOT_QUERY.experiences.1": Object {
                    "dateFrom": "web2",
                    "dateTo": "to2",
                    "id": 2,
                    "image": "prout2",
                    "place": "github2",
                    "role": "tester2",
                  },
                },
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
                "executeSubSelectedArray": [Function],
                "freezeResults": false,
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "previousResult": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "experiences",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "image",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "place",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "dateFrom",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "dateTo",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "role",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 123,
                      "start": 0,
                    },
                  },
                  "variables": Object {},
                },
              },
            },
            "client": [Circular],
          },
          "mutationStore": MutationStore {
            "store": Object {},
          },
          "onBroadcast": [Function],
          "pollingInfoByQueryId": Map {},
          "queries": Map {
            "1" => Object {
              "cancel": [Function],
              "document": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": undefined,
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "experiences",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "image",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "place",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "dateFrom",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "dateTo",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "role",
                                },
                                "selectionSet": undefined,
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 123,
                  "start": 0,
                },
              },
              "invalidated": false,
              "lastRequestId": 2,
              "listeners": Set {
                [Function],
              },
              "newData": null,
              "observableQuery": ObservableQuery {
                "_subscriber": [Function],
                "isTornDown": false,
                "lastResult": Object {
                  "data": Object {
                    "experiences": Array [
                      Object {
                        "dateFrom": "web",
                        "dateTo": "to",
                        "id": 1,
                        "image": "prout",
                        "place": "github",
                        "role": "tester",
                      },
                      Object {
                        "dateFrom": "web2",
                        "dateTo": "to2",
                        "id": 2,
                        "image": "prout2",
                        "place": "github2",
                        "role": "tester2",
                      },
                    ],
                  },
                  "loading": false,
                  "networkStatus": 7,
                  "stale": false,
                },
                "lastResultSnapshot": Object {
                  "data": Object {
                    "experiences": Array [
                      Object {
                        "dateFrom": "web",
                        "dateTo": "to",
                        "id": 1,
                        "image": "prout",
                        "place": "github",
                        "role": "tester",
                      },
                      Object {
                        "dateFrom": "web2",
                        "dateTo": "to2",
                        "id": 2,
                        "image": "prout2",
                        "place": "github2",
                        "role": "tester2",
                      },
                    ],
                  },
                  "loading": false,
                  "networkStatus": 7,
                  "stale": false,
                },
                "observers": Set {
                  SubscriptionObserver {
                    "_subscription": Subscription {
                      "_cleanup": [Function],
                      "_observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "_queue": undefined,
                      "_state": "ready",
                    },
                  },
                },
                "options": Object {
                  "context": undefined,
                  "displayName": "Query",
                  "metadata": Object {
                    "reactComponent": Object {
                      "displayName": "Query",
                    },
                  },
                  "notifyOnNetworkStatusChange": false,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": undefined,
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "experiences",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "image",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "place",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "dateFrom",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "dateTo",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "role",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 123,
                      "start": 0,
                    },
                  },
                  "variables": Object {},
                },
                "queryId": "1",
                "queryManager": [Circular],
                "queryName": undefined,
                "shouldSubscribe": true,
                "subscriptions": Set {},
                "variables": Object {},
              },
              "subscriptions": Set {},
            },
          },
          "queryDeduplication": true,
          "queryStore": QueryStore {
            "store": Object {
              "1": Object {
                "document": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "experiences",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "image",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "place",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "dateFrom",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "dateTo",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "role",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 123,
                    "start": 0,
                  },
                },
                "graphQLErrors": Array [],
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Query",
                  },
                },
                "networkError": null,
                "networkStatus": 7,
                "previousVariables": null,
                "variables": Object {},
              },
            },
          },
          "ssrMode": false,
          "transformCache": WeakMap {},
        },
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "store": DataStore {
          "cache": InMemoryCache {
            "addTypename": false,
            "cacheKeyRoot": KeyTrie {
              "weak": WeakMap {},
              "weakness": true,
            },
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "experiences": Array [
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.0",
                      "type": "id",
                      "typename": undefined,
                    },
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.1",
                      "type": "id",
                      "typename": undefined,
                    },
                  ],
                },
                "ROOT_QUERY.experiences.0": Object {
                  "dateFrom": "web",
                  "dateTo": "to",
                  "id": 1,
                  "image": "prout",
                  "place": "github",
                  "role": "tester",
                },
                "ROOT_QUERY.experiences.1": Object {
                  "dateFrom": "web2",
                  "dateTo": "to2",
                  "id": 2,
                  "image": "prout2",
                  "place": "github2",
                  "role": "tester2",
                },
              },
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "experiences": Array [
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.0",
                      "type": "id",
                      "typename": undefined,
                    },
                    Object {
                      "generated": true,
                      "id": "ROOT_QUERY.experiences.1",
                      "type": "id",
                      "typename": undefined,
                    },
                  ],
                },
                "ROOT_QUERY.experiences.0": Object {
                  "dateFrom": "web",
                  "dateTo": "to",
                  "id": 1,
                  "image": "prout",
                  "place": "github",
                  "role": "tester",
                },
                "ROOT_QUERY.experiences.1": Object {
                  "dateFrom": "web2",
                  "dateTo": "to2",
                  "id": 2,
                  "image": "prout2",
                  "place": "github2",
                  "role": "tester2",
                },
              },
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {
              Object {
                "callback": [Function],
                "optimistic": true,
                "previousResult": [Function],
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": undefined,
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "experiences",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "image",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "place",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "dateFrom",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "dateTo",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "role",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 123,
                    "start": 0,
                  },
                },
                "variables": Object {},
              },
            },
          },
        },
        "typeDefs": undefined,
        "version": "2.6.10",
        "watchQuery": [Function],
      }
    }
  >
    <ThemeProvider
      theme={
        Object {
          "background": "#FEFEFE",
          "headerBorder": "#EEE",
          "mode": "light",
          "text": "#797979",
          "themeSwitcherShadow": "0px 0px 25px 0px rgba(0,0,0,0.15)",
          "title": Object {
            "default": "#24292E",
            "inverse": "#FEFEFE",
          },
          "wavyContainer": "linear-gradient(135deg, rgba(90,81,250,0.5) 0%, rgba(179,204,210,0.5) 100%)",
        }
      }
    >
      <Provider
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <Experiences>
          <Experience
            from="web"
            image="prout"
            key="exp-1"
            place="github"
            title="tester"
            to="to"
          >
            <styled.div>
              <div
                className="sc-fzqBZW dLqHGr"
              >
                <styled.img
                  alt="github"
                  src="prout"
                >
                  <img
                    alt="github"
                    className="sc-fznyAO jMigaE"
                    src="prout"
                  />
                </styled.img>
                <styled.div>
                  <div
                    className="sc-fzqNJr jTANKt"
                  >
                    <ExperienceInfo
                      from="web"
                      place="github"
                      to="to"
                    >
                      <styled.div>
                        <div
                          className="sc-fznKkj liwple"
                        >
                          <styled.p
                            small={true}
                          >
                            <p
                              className="sc-AxhCb jIRXyo"
                            >
                              <styled.span>
                                <span
                                  className="sc-fzoyAV liPVmy"
                                >
                                  github
                                </span>
                              </styled.span>
                            </p>
                          </styled.p>
                          <styled.p
                            bold={true}
                            color="#E1E1E1"
                            mobileInvisible={true}
                            small={true}
                          >
                            <p
                              className="sc-AxhCb hEswAA"
                              color="#E1E1E1"
                            >
                               / 
                            </p>
                          </styled.p>
                          <styled.div>
                            <div
                              className="sc-fznZeY jtSeaW"
                            >
                              <styled.p
                                bold={true}
                                color="#6057F9"
                                small={true}
                              >
                                <p
                                  className="sc-AxhCb eNAXWA"
                                  color="#6057F9"
                                >
                                  From 
                                  web
                                </p>
                              </styled.p>
                              <styled.p
                                bold={true}
                                color="#E1E1E1"
                                small={true}
                              >
                                <p
                                  className="sc-AxhCb jyFLnr"
                                  color="#E1E1E1"
                                >
                                   - 
                                </p>
                              </styled.p>
                              <styled.p
                                bold={true}
                                color="#ABC5D4"
                                small={true}
                              >
                                <p
                                  className="sc-AxhCb iIddUS"
                                  color="#ABC5D4"
                                >
                                  to
                                </p>
                              </styled.p>
                            </div>
                          </styled.div>
                        </div>
                      </styled.div>
                    </ExperienceInfo>
                    <styled.h3>
                      <h3
                        className="sc-fzokOt lvMbV"
                      >
                        tester
                      </h3>
                    </styled.h3>
                  </div>
                </styled.div>
              </div>
            </styled.div>
          </Experience>
          <Experience
            from="web2"
            image="prout2"
            key="exp-2"
            place="github2"
            title="tester2"
            to="to2"
          >
            <styled.div>
              <div
                className="sc-fzqBZW dLqHGr"
              >
                <styled.img
                  alt="github2"
                  src="prout2"
                >
                  <img
                    alt="github2"
                    className="sc-fznyAO jMigaE"
                    src="prout2"
                  />
                </styled.img>
                <styled.div>
                  <div
                    className="sc-fzqNJr jTANKt"
                  >
                    <ExperienceInfo
                      from="web2"
                      place="github2"
                      to="to2"
                    >
                      <styled.div>
                        <div
                          className="sc-fznKkj liwple"
                        >
                          <styled.p
                            small={true}
                          >
                            <p
                              className="sc-AxhCb jIRXyo"
                            >
                              <styled.span>
                                <span
                                  className="sc-fzoyAV liPVmy"
                                >
                                  github2
                                </span>
                              </styled.span>
                            </p>
                          </styled.p>
                          <styled.p
                            bold={true}
                            color="#E1E1E1"
                            mobileInvisible={true}
                            small={true}
                          >
                            <p
                              className="sc-AxhCb hEswAA"
                              color="#E1E1E1"
                            >
                               / 
                            </p>
                          </styled.p>
                          <styled.div>
                            <div
                              className="sc-fznZeY jtSeaW"
                            >
                              <styled.p
                                bold={true}
                                color="#6057F9"
                                small={true}
                              >
                                <p
                                  className="sc-AxhCb eNAXWA"
                                  color="#6057F9"
                                >
                                  From 
                                  web2
                                </p>
                              </styled.p>
                              <styled.p
                                bold={true}
                                color="#E1E1E1"
                                small={true}
                              >
                                <p
                                  className="sc-AxhCb jyFLnr"
                                  color="#E1E1E1"
                                >
                                   - 
                                </p>
                              </styled.p>
                              <styled.p
                                bold={true}
                                color="#ABC5D4"
                                small={true}
                              >
                                <p
                                  className="sc-AxhCb iIddUS"
                                  color="#ABC5D4"
                                >
                                  to2
                                </p>
                              </styled.p>
                            </div>
                          </styled.div>
                        </div>
                      </styled.div>
                    </ExperienceInfo>
                    <styled.h3>
                      <h3
                        className="sc-fzokOt lvMbV"
                      >
                        tester2
                      </h3>
                    </styled.h3>
                  </div>
                </styled.div>
              </div>
            </styled.div>
          </Experience>
        </Experiences>
      </Provider>
    </ThemeProvider>
  </ApolloProvider>
</MockedProvider>
`;
